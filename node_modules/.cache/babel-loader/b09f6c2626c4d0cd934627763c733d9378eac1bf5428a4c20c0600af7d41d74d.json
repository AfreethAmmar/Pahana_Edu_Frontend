{"ast":null,"code":"import api, { handleApiError } from './api';\nimport { API_ENDPOINTS } from '../utils/constants';\nclass SalesService {\n  // Get all sales\n  async getAllSales() {\n    try {\n      const response = await api.get(API_ENDPOINTS.SALES.BASE);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: handleApiError(error)\n      };\n    }\n  }\n\n  // Get sale by ID\n  async getSaleById(id) {\n    try {\n      const response = await api.get(`${API_ENDPOINTS.SALES.BASE}/${id}`);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: handleApiError(error)\n      };\n    }\n  }\n\n  // Create new sale\n  async createSale(saleData) {\n    try {\n      const response = await api.post(API_ENDPOINTS.SALES.CREATE, {\n        customerId: saleData.customerId || null,\n        customerName: saleData.customerName,\n        items: saleData.items,\n        paymentMethod: saleData.paymentMethod || 'CASH',\n        discount: saleData.discount || '0.00',\n        notes: saleData.notes || ''\n      });\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: handleApiError(error)\n      };\n    }\n  }\n\n  // Get sales by status\n  async getSalesByStatus(status) {\n    try {\n      const response = await api.get(`${API_ENDPOINTS.SALES.BY_STATUS}/${status}`);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: handleApiError(error)\n      };\n    }\n  }\n\n  // Get sales by customer\n  async getSalesByCustomer(customerId) {\n    try {\n      const response = await api.get(`${API_ENDPOINTS.SALES.BY_CUSTOMER}/${customerId}`);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: handleApiError(error)\n      };\n    }\n  }\n\n  // Get sales analytics\n  async getSalesAnalytics() {\n    try {\n      const response = await api.get(API_ENDPOINTS.SALES.ANALYTICS);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: handleApiError(error)\n      };\n    }\n  }\n\n  // Update sale status\n  async updateSaleStatus(saleId, status) {\n    try {\n      const response = await api.put(`${API_ENDPOINTS.SALES.BASE}/${saleId}/status`, {\n        status: status\n      });\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: handleApiError(error)\n      };\n    }\n  }\n\n  // Format items for API (convert array to string format)\n  formatItemsForApi(items) {\n    return items.map(item => `${item.productId}:${item.quantity}`).join(',');\n  }\n\n  // Calculate total amount from items\n  calculateTotal(items) {\n    return items.reduce((total, item) => {\n      return total + item.unitPrice * item.quantity;\n    }, 0);\n  }\n\n  // Calculate final amount after discount\n  calculateFinalAmount(subtotal, discount = 0) {\n    return Math.max(0, subtotal - parseFloat(discount));\n  }\n}\nconst salesService = new SalesService();\nexport default salesService;","map":{"version":3,"names":["api","handleApiError","API_ENDPOINTS","SalesService","getAllSales","response","get","SALES","BASE","success","data","error","getSaleById","id","createSale","saleData","post","CREATE","customerId","customerName","items","paymentMethod","discount","notes","getSalesByStatus","status","BY_STATUS","getSalesByCustomer","BY_CUSTOMER","getSalesAnalytics","ANALYTICS","updateSaleStatus","saleId","put","formatItemsForApi","map","item","productId","quantity","join","calculateTotal","reduce","total","unitPrice","calculateFinalAmount","subtotal","Math","max","parseFloat","salesService"],"sources":["C:/Users/afree/OneDrive/Desktop/ap frontend/Pahana_Edu_Frontend/src/services/salesService.js"],"sourcesContent":["import api, { handleApiError } from './api';\nimport { API_ENDPOINTS } from '../utils/constants';\n\nclass SalesService {\n  // Get all sales\n  async getAllSales() {\n    try {\n      const response = await api.get(API_ENDPOINTS.SALES.BASE);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: handleApiError(error)\n      };\n    }\n  }\n\n  // Get sale by ID\n  async getSaleById(id) {\n    try {\n      const response = await api.get(`${API_ENDPOINTS.SALES.BASE}/${id}`);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: handleApiError(error)\n      };\n    }\n  }\n\n  // Create new sale\n  async createSale(saleData) {\n    try {\n      const response = await api.post(API_ENDPOINTS.SALES.CREATE, {\n        customerId: saleData.customerId || null,\n        customerName: saleData.customerName,\n        items: saleData.items,\n        paymentMethod: saleData.paymentMethod || 'CASH',\n        discount: saleData.discount || '0.00',\n        notes: saleData.notes || ''\n      });\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: handleApiError(error)\n      };\n    }\n  }\n\n  // Get sales by status\n  async getSalesByStatus(status) {\n    try {\n      const response = await api.get(`${API_ENDPOINTS.SALES.BY_STATUS}/${status}`);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: handleApiError(error)\n      };\n    }\n  }\n\n  // Get sales by customer\n  async getSalesByCustomer(customerId) {\n    try {\n      const response = await api.get(`${API_ENDPOINTS.SALES.BY_CUSTOMER}/${customerId}`);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: handleApiError(error)\n      };\n    }\n  }\n\n  // Get sales analytics\n  async getSalesAnalytics() {\n    try {\n      const response = await api.get(API_ENDPOINTS.SALES.ANALYTICS);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: handleApiError(error)\n      };\n    }\n  }\n\n  // Update sale status\n  async updateSaleStatus(saleId, status) {\n    try {\n      const response = await api.put(`${API_ENDPOINTS.SALES.BASE}/${saleId}/status`, {\n        status: status\n      });\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: handleApiError(error)\n      };\n    }\n  }\n\n  // Format items for API (convert array to string format)\n  formatItemsForApi(items) {\n    return items.map(item => `${item.productId}:${item.quantity}`).join(',');\n  }\n\n  // Calculate total amount from items\n  calculateTotal(items) {\n    return items.reduce((total, item) => {\n      return total + (item.unitPrice * item.quantity);\n    }, 0);\n  }\n\n  // Calculate final amount after discount\n  calculateFinalAmount(subtotal, discount = 0) {\n    return Math.max(0, subtotal - parseFloat(discount));\n  }\n}\n\nconst salesService = new SalesService();\nexport default salesService;"],"mappings":"AAAA,OAAOA,GAAG,IAAIC,cAAc,QAAQ,OAAO;AAC3C,SAASC,aAAa,QAAQ,oBAAoB;AAElD,MAAMC,YAAY,CAAC;EACjB;EACA,MAAMC,WAAWA,CAAA,EAAG;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAACJ,aAAa,CAACK,KAAK,CAACC,IAAI,CAAC;MACxD,OAAO;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAEL,QAAQ,CAACK;MACjB,CAAC;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,OAAO;QACLF,OAAO,EAAE,KAAK;QACdE,KAAK,EAAEV,cAAc,CAACU,KAAK;MAC7B,CAAC;IACH;EACF;;EAEA;EACA,MAAMC,WAAWA,CAACC,EAAE,EAAE;IACpB,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,GAAGJ,aAAa,CAACK,KAAK,CAACC,IAAI,IAAIK,EAAE,EAAE,CAAC;MACnE,OAAO;QACLJ,OAAO,EAAE,IAAI;QACbC,IAAI,EAAEL,QAAQ,CAACK;MACjB,CAAC;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,OAAO;QACLF,OAAO,EAAE,KAAK;QACdE,KAAK,EAAEV,cAAc,CAACU,KAAK;MAC7B,CAAC;IACH;EACF;;EAEA;EACA,MAAMG,UAAUA,CAACC,QAAQ,EAAE;IACzB,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAML,GAAG,CAACgB,IAAI,CAACd,aAAa,CAACK,KAAK,CAACU,MAAM,EAAE;QAC1DC,UAAU,EAAEH,QAAQ,CAACG,UAAU,IAAI,IAAI;QACvCC,YAAY,EAAEJ,QAAQ,CAACI,YAAY;QACnCC,KAAK,EAAEL,QAAQ,CAACK,KAAK;QACrBC,aAAa,EAAEN,QAAQ,CAACM,aAAa,IAAI,MAAM;QAC/CC,QAAQ,EAAEP,QAAQ,CAACO,QAAQ,IAAI,MAAM;QACrCC,KAAK,EAAER,QAAQ,CAACQ,KAAK,IAAI;MAC3B,CAAC,CAAC;MACF,OAAO;QACLd,OAAO,EAAE,IAAI;QACbC,IAAI,EAAEL,QAAQ,CAACK;MACjB,CAAC;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,OAAO;QACLF,OAAO,EAAE,KAAK;QACdE,KAAK,EAAEV,cAAc,CAACU,KAAK;MAC7B,CAAC;IACH;EACF;;EAEA;EACA,MAAMa,gBAAgBA,CAACC,MAAM,EAAE;IAC7B,IAAI;MACF,MAAMpB,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,GAAGJ,aAAa,CAACK,KAAK,CAACmB,SAAS,IAAID,MAAM,EAAE,CAAC;MAC5E,OAAO;QACLhB,OAAO,EAAE,IAAI;QACbC,IAAI,EAAEL,QAAQ,CAACK;MACjB,CAAC;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,OAAO;QACLF,OAAO,EAAE,KAAK;QACdE,KAAK,EAAEV,cAAc,CAACU,KAAK;MAC7B,CAAC;IACH;EACF;;EAEA;EACA,MAAMgB,kBAAkBA,CAACT,UAAU,EAAE;IACnC,IAAI;MACF,MAAMb,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,GAAGJ,aAAa,CAACK,KAAK,CAACqB,WAAW,IAAIV,UAAU,EAAE,CAAC;MAClF,OAAO;QACLT,OAAO,EAAE,IAAI;QACbC,IAAI,EAAEL,QAAQ,CAACK;MACjB,CAAC;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,OAAO;QACLF,OAAO,EAAE,KAAK;QACdE,KAAK,EAAEV,cAAc,CAACU,KAAK;MAC7B,CAAC;IACH;EACF;;EAEA;EACA,MAAMkB,iBAAiBA,CAAA,EAAG;IACxB,IAAI;MACF,MAAMxB,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAACJ,aAAa,CAACK,KAAK,CAACuB,SAAS,CAAC;MAC7D,OAAO;QACLrB,OAAO,EAAE,IAAI;QACbC,IAAI,EAAEL,QAAQ,CAACK;MACjB,CAAC;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,OAAO;QACLF,OAAO,EAAE,KAAK;QACdE,KAAK,EAAEV,cAAc,CAACU,KAAK;MAC7B,CAAC;IACH;EACF;;EAEA;EACA,MAAMoB,gBAAgBA,CAACC,MAAM,EAAEP,MAAM,EAAE;IACrC,IAAI;MACF,MAAMpB,QAAQ,GAAG,MAAML,GAAG,CAACiC,GAAG,CAAC,GAAG/B,aAAa,CAACK,KAAK,CAACC,IAAI,IAAIwB,MAAM,SAAS,EAAE;QAC7EP,MAAM,EAAEA;MACV,CAAC,CAAC;MACF,OAAO;QACLhB,OAAO,EAAE,IAAI;QACbC,IAAI,EAAEL,QAAQ,CAACK;MACjB,CAAC;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,OAAO;QACLF,OAAO,EAAE,KAAK;QACdE,KAAK,EAAEV,cAAc,CAACU,KAAK;MAC7B,CAAC;IACH;EACF;;EAEA;EACAuB,iBAAiBA,CAACd,KAAK,EAAE;IACvB,OAAOA,KAAK,CAACe,GAAG,CAACC,IAAI,IAAI,GAAGA,IAAI,CAACC,SAAS,IAAID,IAAI,CAACE,QAAQ,EAAE,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;EAC1E;;EAEA;EACAC,cAAcA,CAACpB,KAAK,EAAE;IACpB,OAAOA,KAAK,CAACqB,MAAM,CAAC,CAACC,KAAK,EAAEN,IAAI,KAAK;MACnC,OAAOM,KAAK,GAAIN,IAAI,CAACO,SAAS,GAAGP,IAAI,CAACE,QAAS;IACjD,CAAC,EAAE,CAAC,CAAC;EACP;;EAEA;EACAM,oBAAoBA,CAACC,QAAQ,EAAEvB,QAAQ,GAAG,CAAC,EAAE;IAC3C,OAAOwB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEF,QAAQ,GAAGG,UAAU,CAAC1B,QAAQ,CAAC,CAAC;EACrD;AACF;AAEA,MAAM2B,YAAY,GAAG,IAAI9C,YAAY,CAAC,CAAC;AACvC,eAAe8C,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}